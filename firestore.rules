rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is admin
    function isAdmin() {
      return request.auth != null && request.auth.token.role == 'admin';
    }

    // Users collection
    match /users/{userId} {
      allow read: if true;
      allow create: if request.auth != null && request.auth.uid == userId;
      allow update: if request.auth != null &&
        (request.auth.uid == userId ||
        // Validate referral logic
        (resource.data.referredBy != null &&
        request.resource.data.referredBy == resource.data.referredBy &&
        exists(/databases/$(database)/documents/users/$(resource.data.referredBy)) &&
        request.resource.data.diff(resource.data).affectedKeys()
          .hasOnly(['referralPoints', 'referrals'])));

    }

    // Courses collection
    match /courses/{courseId} {
      allow read: if true; // Publicly readable
      allow write: if isAdmin();
    }

    // Certificates collection
    match /certificates/{certId} {
      allow read: if request.auth != null && 
        (resource.data.userId == request.auth.uid || isAdmin());
      allow create: if request.auth != null;
      allow update: if request.auth != null && 
        (resource.data.userId == request.auth.uid || isAdmin());
    }

    // Course Ratings collection
    match /course_ratings/{ratingId} {
      allow read: if true; // Publicly readable
      allow create: if request.auth != null;
    }

    // Contact Messages collection
    match /contact_messages/{messageId} {
      allow read, write: if isAdmin();
      allow create: if true; // Allows anyone to create a message
    }

    // Orders collection
    match /orders/{orderId} {
      allow read: if request.auth != null && 
        (resource.data.userId == request.auth.uid || isAdmin());
      allow create: if request.auth != null && 
        request.resource.data.userId == request.auth.uid;
    }
  }
}
